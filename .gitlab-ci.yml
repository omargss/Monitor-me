# Template for Compilation & Tests in GitLab CI
# image: nickgryg/alpine-pandas
image: devops.telecomste.fr:5050/printerfaceadmin/2022-23/group8/image:test
#test

# include all the before script in a requirement file
before_script:
  
stages:
  - compile
  - pylint
  - coverage
  - test
  - delivery

compile:
  stage: compile
  script:
  - echo "Here goes my compile command [NOT IMPLEMENTED YET]"

pylint:
  stage : pylint
  script : pylint script/web_app/app.py --fail-under=8
 
coverage :
  stage : coverage
  script : 
    - cd script/web_app/
    - pwd
    - coverage run -m unittest /builds/printerfaceadmin/2022-23/group8/script/web_app/*.py
    - coverage report | grep -E "/^\s*TOTAL\s+\d+\s+\d+\s+\d+%/gm" | grep -E "^(.{2})*%"
    - cd /
    
# test:
#   stage: test
#   script:
#   - python3 -m unittest test.py

# delivery :
#   stage : delivery
#   image: docker:19.03.12
#   variables:
#     CI_REGISTRY_IMAGE: devops.telecomste.fr:5050/printerfaceadmin/2022-23/group8/image
#     DOCKER_HOST: tcp://docker:2375/
#     DOCKER_DRIVER: overlay2
#     DOCKER_TLS_CERTDIR: ""

#   services:
#     - name: docker:dind
#       entrypoint: ["env", "-u", "DOCKER_HOST"]
#       command: ["dockerd-entrypoint.sh"]
  
#   before_script:
#     - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
#   script :
#     - docker build -t "$CI_REGISTRY_IMAGE" -f Dockerfile .
#     - docker push "$CI_REGISTRY_IMAGE" 

#   only : 
#     refs:
#       - master
