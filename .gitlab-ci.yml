# Template for Compilation & Tests in GitLab CI
image: python:3.8-alpine

# include all the before script in a requirement file
before_script:
  - pip install --upgrade pip
  # - pip install wheel setuptools pip --upgrade
  # - pip3 install wheel setuptools pip --upgrade
  - pip install -r requirements.txt
  
stages:
  - compile
  - pylint
  - coverage
  - test

#  - deploy

compile:
  stage: compile
  script:
  - echo "Here goes my compile command [NOT IMPLEMENTED YET]"

pylint:
  stage : pylint
  script : pylint script/
  #- echo "Checking for code quality [NOT IMPLEMENTED YET]"

coverage :
  stage : coverage
  script : 
    if [(coverage run -m unittest -s script/ report) == (coverage run -m unittest -s script/ report --fail-under=70)]; then 
      echo "Coverage is ok";
    else 
      echo "Coverage is not ok";
      exit 1;
    fi

  
test:
  stage: test
  script:
  - echo "Running unit tests [NOT IMPLEMENTED YET]"
  - python3 -m unittest test_get_infos.py




# Step below are not useful for the moment

#staging:
#  stage: deploy
#  script:
#  - echo "Deploying application on production environnement [NOT IMPLEMENTED YET]"
#  only:
#  - master

#production:
#  stage: deploy
#  script:
#  - echo "Deploying application on pre-production environnement [NOT IMPLEMENTED YET]"
#  only:
#  - develop

#lint:
#  stage: lint
#  script:

#coverage:
#  stage: coverage
#  script:
#  - echo "Checking for code coverage level [NOT IMPLEMENTED YET]"


