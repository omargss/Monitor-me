# Template for Compilation & Tests in GitLab CI
image: nickgryg/alpine-pandas

# include all the before script in a requirement file
before_script:
  - apk add --no-cache --virtual=build-dependencies g++ gcc make libffi-dev
  - python --version
  - pip install --upgrade pip
  - pip install -r requirements.txt 
  
stages:
  - compile
  - pylint
  - coverage
  - test

#compile:
  #stage: compile
  #script:
  #- echo "Here goes my compile command [NOT IMPLEMENTED YET]"

#pylint:
  #stage : pylint
  #script : pylint script/web_app/app.py --fail-under=9
 
coverage :
  stage : coverage
  script : 
    #if [(coverage run -m unittest -s script/ report) == (coverage run -m unittest -s script/ report --fail-under=70)]; then
    #if [(coverage report | grep -E "/^\s*TOTAL\s+\d+\s+\d+\s+\d+%/gm" | grep -E "^(.{2})*%") -gt 70]; then
    coverage run /printerfaceadmin/2022-23/group8/-/tree/main/script
    #coverage report -m
    
      #echo "Coverage is ok";
    #else 
      #echo "Coverage is not ok";
      #exit 1;
    #fi

  
test:
  stage: test
  script:
  - echo "Running unit tests [NOT IMPLEMENTED YET]"
  - python3 -m unittest test_get_infos.py


# Step below are not useful for the moment

#staging:
#  stage: deploy
#  script:
#  - echo "Deploying application on production environnement [NOT IMPLEMENTED YET]"
#  only:
#  - master

#production:
#  stage: deploy
#  script:
#  - echo "Deploying application on pre-production environnement [NOT IMPLEMENTED YET]"
#  only:
#  - develop

#lint:
#  stage: lint
#  script:

#coverage:
#  stage: coverage
#  script:
#  - echo "Checking for code coverage level [NOT IMPLEMENTED YET]"


